@page "/VinylsGrid"
<br />
<br />
<h3 style="text-align:center">Vinyl Collection</h3>
<br />
<div class="row">
    <div class="col-md-6">
        <a href='/Vinyl/Add' class="btn btn-primary" role="button">
            <i class="oi oi-plus"></i>
             Vinyl
        </a>
    </div>
    <div class="input-group col">
        <input type="text" class="form-control" placeholder="Search vinyl by name"
        @bind="SearchString" @bind:event="oninput" @onkeyup="FilterVinyl" />
        @if (SearchString.Length > 0)
        {
            <div class="input-group-append">
                <button class="btn btn-danger" @onclick="ResetSearch">
                    <i class="oi oi-circle-x"></i>
                </button>
            </div>
        }
    </div>
</div>
<br />
@if (vinylRecordList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-primary">
            <tr>
                <th>Id</th>
                <th width="25%">Vinyl</th>
                <th width="25%">Artist</th>
                <th width="25%">Favorite Song</th>
                <th width="15%">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rec in vinylRecordList)
            {
                <tr>
                    <td>@rec.VinylRecordId</td>
                    <td>@rec.AlbumName</td>
                    <td>@rec.ArtistFullName</td>
                    <td>@rec.FavoriteSong</td>
                    <td>
                        <a href='/Vinyl/Edit/@rec.VinylRecordId' class="btn btn-outline-success" role="button">
                            <i class="oi oi-pencil"></i>
                        </a>
                        <a href='/Vinyl/Delete/@rec.VinylRecordId' class="btn btn-outline-danger" role="button">
                            <i class="oi oi-trash"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
}

@code {

    protected List<VinylRecord> vinylRecordList = new();
    protected List<VinylRecord> searchVinylData = new();
    protected VinylRecord newVinyl = new();
    protected string SearchString { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetVinyls();
    }

    protected async Task GetVinyls()
    {
        
        vinylRecordList = _service.GetVinylRecords();
        searchVinylData = vinylRecordList;
    }

    protected void FilterVinyl()
    {
        if (!string.IsNullOrEmpty(SearchString))
        {
            vinylRecordList = searchVinylData
                .Where(v => v.AlbumName.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1)
                .ToList();
        }
        else
        {
            vinylRecordList = searchVinylData;
        }
    }

    protected void DeleteConfirm(int vinylRecordId)
    {
        newVinyl = vinylRecordList.FirstOrDefault(v => v.VinylRecordId == vinylRecordId);
    }

    public void ResetSearch()
    {
        SearchString = string.Empty;
        vinylRecordList = searchVinylData;
    }
}